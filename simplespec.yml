---
# Simple OpenAPI spec for testing openapimux package.
#
# Validate with:
#
#   swagger-cli validate openapimux/simplespec.yaml
#   openapi lint openapimux/simplespec.yaml
openapi: 3.0.3
info:
  title: Simple API
  description: a simple API spec for testing
  version: 0.0.1
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: 'https://api.example.com/v0'
paths:
  /foo/{id}:
    summary: work with foos
    get:
      summary: get a foo
      operationId: getFoo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^[abc]*$
        - name: bip
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: fod
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: a single foo
          content:
            application/json:
              schema:
                type: object

  /foo:
    post:
      summary: create a foo
      operationId: createFoo
      parameters:
        - name: bip
          in: query
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - length
              properties:
                name:
                  type: string
                  minLength: 2
                length:
                  type: integer
                  minimum: 0

                # Specifying a snack is optional, but if it is present, it must be either pizza or cake.
                snack:
                  oneOf:
                    - $ref: '#/components/schemas/pizza'
                    - $ref: '#/components/schemas/cake'
                  discriminator:
                    propertyName: snack_type
                    mapping:
                      PIZZA: '#/components/schemas/pizza'
                      CAKE: '#/components/schemas/cake'

      responses:
        '200':
          description: foo created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    format: uuid
        '400':
          description: bad foo
          content:
            application/json:
              schema:
                type: object
                required:
                  - detail
                properties:
                  detail:
                    type: string
      security:
        # client must supply (header Api-Key and cookie session_id) or (query param apikey)
        - header_key: []
          session_id: []
        - param_key: []

components:
  securitySchemes:
    header_key:
      type: apiKey
      name: Api-Key
      in: header
    session_id:
      type: apiKey
      name: session_id
      in: cookie
    param_key:
      type: apiKey
      name: apikey
      in: query

  schemas:
    pizza:
      type: object
      required:
        - snack_type
        - toppings
        - size
      properties:
        toppings:
          type: array
          items:
            type: string
            enum:
              - MUSHROOM
              - SAUSAGE
        size:
          type: integer
    cake:
      type: object
      required:
        - snack_type
        - flavour
        - layers
      properties:
        flavour:
          type: string
          enum:
            - CHOCOLATE
            - VANILLA
        layers:
          type: integer
          minimum: 1
          maximum: 5
